<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
    <title>仮想通貨情報</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/lightweight-charts/dist/lightweight-charts.standalone.production.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.0/js/jquery.tablesorter.min.js"></script>
    <script src="http://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
    <script src="https://www.amcharts.com/lib/3/serial.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/dataloader/dataloader.min.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
    <link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
    <script src="https://www.amcharts.com/lib/3/themes/dark.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.0/css/theme.default.min.css">
    <script src="https://cdn.jsdelivr.net/npm/lazyload@2.0.0-rc.2/lazyload.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/t/bs-3.3.6/jqc-1.12.0,dt-1.10.11/datatables.min.css"/> 
    <script src="https://cdn.datatables.net/t/bs-3.3.6/jqc-1.12.0,dt-1.10.11/datatables.min.js"></script>
</head>

<body>
    <div class="container">
        <h4 class="mt-4 border-bottom">仮想通貨一覧</h4>
        

        <div class="container-fluid mt-3">
            <div class="container-fluid mt-3">
                <div class="row" id="custom_filters">
                    <div class="col-sm-12">
                        <label>規模:</label>
                        <label>min<input class="custom_filter table-between form-control form-control-sm" id="market-cap-between--start"/></label>
                        <label>max<input class="custom_filter table-between form-control form-control-sm" id="market-cap-between--end"/></label>
                    </div>
                </div>
            </div>
        </div>
        <table id="market-cap-table" class="table table-striped table-bordered">
            <thead>
            <tr>
                <th>通貨名</th>
                <th scope="col">価格(参考)</th>
                <th scope="col">1h</th>
                <th scope="col">24h</th>
                <th scope="col">7d</th>
                <th scope="col">24h 取引量</th>
                <th scope="col">規模</th>
                <th scope="col">グラフ</th>
                <th scope="col">市場規模/取引高</th>
            </tr>
            </thead>
            <tbody id="market-cap-table-body">
            </tbody>
        </table>

        <script type="text/javascript">

            $(document).ready(function(){
                var marketCapTableBody = $("#market-cap-table-body")
                fetch("https://api.coinmarketcap.com/data-api/v3/cryptocurrency/listing?start=1&limit=5000&sortBy=market_cap&sortType=desc&convert=USD&cryptoType=coins")
                    .then((r) => r.json())
                    .then((response) => {
                        var cryptoCurrencyList = response["data"]["cryptoCurrencyList"]
                        console.log(cryptoCurrencyList)
                        cryptoCurrencyList.forEach((currency) => {
                            var tr = document.createElement("tr")
                            var tdSymbol = document.createElement("td")
                            var tdPrice = document.createElement("td")
                            var td1h = document.createElement("td")
                            var td24h = document.createElement("td")
                            var td7d = document.createElement("td")
                            var td24hVolume = document.createElement("td")
                            var tdMarketCap = document.createElement("td")
                            var tdSparkline = document.createElement("td")
                            var td24hPerMarket = document.createElement("td")

                            var aSymbol = document.createElement("a")
                            aSymbol.setAttribute("href", "https://coinmarketcap.com/currencies/" + currency["slug"])
                            aSymbol.append(currency["name"] + "(" + currency["symbol"] + ")")

                            var imgSparkline = document.createElement("img")
                            imgSparkline.setAttribute("class", "lazyload")
                            // imgSparkline.setAttribute("data-src", "https://s3.coinmarketcap.com/generated/sparklines/web/7d/2781/" + currency["id"] + ".svg")
                            imgSparkline.setAttribute("src", "https://s3.coinmarketcap.com/generated/sparklines/web/7d/2781/" + currency["id"] + ".svg")
                            imgSparkline.setAttribute("alt", "sparkline")

                            var quote = currency["quotes"][0]

                            tdSymbol.append(aSymbol)
                            tdPrice.append(quote["price"].toFixed(5))
                            td1h.append(quote["percentChange1h"].toFixed(2) + "%")
                            td24h.append(quote["percentChange24h"].toFixed(2) + "%")
                            td7d.append(quote["percentChange7d"].toFixed(2) + "%")
                            td24hVolume.append(quote["volume24h"].toFixed(2))
                            tdMarketCap.append(quote["marketCap"].toFixed(2))
                            tdSparkline.append(imgSparkline)
                            if(quote["volume24h"] !== 0.0 && quote["marketCap"] !== 0.0){
                                td24hPerMarket.append((quote["volume24h"] / quote["marketCap"]).toFixed(2))
                            }


                            tdPrice.setAttribute("class", "text-right")
                            td1h.setAttribute("class", "text-right")
                            td24h.setAttribute("class", "text-right")
                            td7d.setAttribute("class", "text-right")
                            td24hVolume.setAttribute("class", "text-right")
                            tdMarketCap.setAttribute("class", "text-right")
                            td24hPerMarket.setAttribute("class", "text-right")

                            tr.appendChild(tdSymbol)
                            tr.appendChild(tdPrice)
                            tr.appendChild(td1h)
                            tr.appendChild(td24h)
                            tr.appendChild(td7d)
                            tr.appendChild(td24hVolume)
                            tr.appendChild(tdMarketCap)
                            tr.appendChild(tdSparkline)
                            tr.appendChild(td24hPerMarket)

                            marketCapTableBody.append(tr)
                        })


                        $.fn.dataTable.ext.search.push(
                            function(setting, data, dataIndex){
                                var min = parseFloat($("#market-cap-between--start").val()) || ""
                                var max = parseFloat($("#market-cap-between--end").val()) || ""
                                var marketCap = parseFloat(data[6]) || 0

                                if (min === "" && max === ""){
                                    return true
                                }

                                if (min === "" && marketCap <= max){
                                    return true
                                }

                                if (max == "" && min <= marketCap){
                                    return true
                                }

                                if (min <= marketCap && marketCap <= max){
                                    return true
                                }
                                
                                return false
                            }
                        )

                        marketCapTable = $("#market-cap-table").DataTable()
                        
                        $('#market-cap-between--start, #market-cap-between--end').keyup( function() {
                            marketCapTable.draw();
                        } );

                        // lazyload()
                    })
            })

        </script>
    </div>
</body>
</html>
